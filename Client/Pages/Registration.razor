@page "/registration"
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Zarejestruj się</h3>
<EditForm Model="user" OnValidSubmit="OnSubmitRegistration">
    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>

    </div>
    <div class="form-group">
        <label for="username" class="required">Login</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Username)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="password" class="required">Hasło</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Password)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="confirmPassword" class="required">Potwierdź hasło</label>
        <InputText id="confirmPassword" @bind-Value="user.PasswordConfirm" type="password" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.PasswordConfirm)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="dateOfBirth">Data urodzenia</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
    </div>
    <div class="form-group form-check">
        <InputCheckbox id="confirmation" @bind-Value="user.Confirmation" class="form-check-input"></InputCheckbox>
        <label for="confirmation" class="form-check-label">Akceptuję regulamin serwisu.</label>
        <ValidationMessage For="@(() => user.Confirmation)"></ValidationMessage>
    </div>
    <button type="submit" class="btn btn-success">Idź!</button>
</EditForm>

@code {

    private UserRegistration user = new UserRegistration();
    private bool registrated = false;
    private async void OnSubmitRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess("Udało się!", "Konto utworzone");
            registrated = true;
            NavigationManager.NavigateTo("login");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }


}
